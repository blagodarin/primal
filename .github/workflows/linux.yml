name: Linux
on: [ push, pull_request ]
jobs:
  ci:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - cxx: g++-10
            config: Release
          - cxx: g++-10
            config: Debug
            mode: sanitizers
          - cxx: clang++-12
            config: Release
          - cxx: clang++-12
            config: Debug
            mode: sanitizers
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: CMake
        env:
          CXX: ${{ matrix.cxx }}
        run: |
          if [ "${{ matrix.mode }}" == "sanitizers" ]; then
            export CXXFLAGS="-fsanitize=address -fsanitize=undefined -fno-sanitize=nonnull-attribute"
            export LDFLAGS="-fsanitize=address -fsanitize=undefined"
          fi
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ matrix.config }} \
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/install" \
            -DPRIMAL_BENCHMARKS=${{ matrix.config != 'Debug' && 'ON' || 'OFF' }} \
            -DPRIMAL_TESTS=ON
      - name: Build
        run: |
          cmake --build build
      - name: Test
        run: |
          cd build
          ASAN_OPTIONS=allocator_may_return_null=1 ctest --verbose
      - name: Check installation
        env:
          CXX: ${{ matrix.cxx }}
        run: |
          cmake --build build --target install
          cmake -S tests/import -B build.import -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ matrix.config }} \
            -DCMAKE_PREFIX_PATH="${{ github.workspace }}/install"
          cmake --build build.import
      - name: Benchmark
        if: matrix.config != 'Debug'
        run: |
          build/benchmarks/primal_benchmarks
