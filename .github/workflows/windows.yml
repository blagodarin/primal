name: Windows
on:
  push:
    paths-ignore:
      - 'LICENSE'
      - 'README.md'
jobs:
  ninja:
    name: Ninja
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - config: Release
            arch: amd64
          - config: Debug
            arch: x86
      fail-fast: false
    env:
      CMAKE_GENERATOR: Ninja
    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-vsdevenv@master
        with:
          arch: ${{ matrix.arch }}
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: CMake
        run: |
          cmake -S . -B build `
            -DCMAKE_BUILD_TYPE=${{ matrix.config }} `
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}\install" `
            -DPRIMAL_BENCHMARKS=${{ matrix.config != 'Debug' && 'ON' || 'OFF' }} `
            -DPRIMAL_TESTS=ON
      - name: Build
        run: |
          cmake --build build
      - name: Test
        run: |
          cd build
          ctest --verbose
      - name: Check installation
        run: |
          cmake --build build --target install
          cmake -S tests\import -B build.import `
            -DCMAKE_BUILD_TYPE=${{ matrix.config }} `
            -DCMAKE_PREFIX_PATH="${{ github.workspace }}\install"
          cmake --build build.import
      - name: Benchmark
        if: matrix.config != 'Debug'
        run: |
          build\benchmarks\primal_benchmarks.exe
  vs:
    name: VS
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - config: Debug
            arch: amd64
          - config: RelWithDebInfo
            arch: x86
      fail-fast: false
    env:
      CMAKE_GENERATOR: Visual Studio 16 2019
      CMAKE_GENERATOR_PLATFORM: ${{ matrix.arch == 'amd64' && 'x64' || 'Win32' }}
    steps:
      - uses: actions/checkout@v2
      - name: CMake
        run: |
          cmake -S . -B build `
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}\install" `
            -DPRIMAL_BENCHMARKS=${{ matrix.config != 'Debug' && 'ON' || 'OFF' }} `
            -DPRIMAL_TESTS=ON
      - name: Build
        run: |
          cmake --build build --config ${{ matrix.config }} --parallel -- /nologo
      - name: Test
        run: |
          cd build
          ctest --build-config ${{ matrix.config }} --verbose
      - name: Check installation
        run: |
          cmake --build build --config ${{ matrix.config }} --target install -- /nologo
          cmake -S tests\import -B build.import `
            -DCMAKE_PREFIX_PATH="${{ github.workspace }}\install"
          cmake --build build.import --config ${{ matrix.config }} -- /nologo
      - name: Benchmark
        if: matrix.config != 'Debug'
        run: |
          build\benchmarks\${{ matrix.config }}\primal_benchmarks.exe
