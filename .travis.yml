language: cpp

git:
  depth: 1

matrix:
  include:

    - os: linux
      dist: focal
      compiler: gcc
      env: GCC=10 CONFIG=Release
      addons: &gcc_addons
        apt:
          packages:
            - g++-10
            - ninja-build

    - os: linux
      dist: focal
      compiler: gcc
      env: GCC=10 CONFIG=Debug SANITIZERS=1
      addons: *gcc_addons

    - os: linux
      dist: focal
      compiler: gcc
      env: GCC=10 CONFIG=Debug COVERAGE=1
      addons: *gcc_addons

    - os: linux
      dist: focal
      compiler: clang
      env: CLANG=11 CONFIG=Release
      addons: &clang_addons
        apt:
          packages:
            - clang-11
            - libstdc++-10-dev
            - ninja-build

    - os: linux
      dist: focal
      compiler: clang
      env: CLANG=11 CONFIG=Debug SANITIZERS=1
      addons: *clang_addons

before_install:
  - if [ -n "${CLANG}" ]; then export CXX=clang++-${CLANG}; fi
  - if [ -n "${GCC}" ]; then export CXX=g++-${GCC}; fi
  - ${CXX} --version

install:
  - cmake --version
  - mkdir "${HOME}/cmake" && pushd "${HOME}/cmake"
  - wget --output-document=- --quiet https://github.com/Kitware/CMake/releases/download/v3.21.4/cmake-3.21.4-linux-x86_64.tar.gz | tar -x --gzip --strip-components 1
  - export PATH="$(pwd)/bin:${PATH}"
  - popd
  - cmake --version
  - if [ -n "${COVERAGE}" ]; then pip install --user codecov; fi

script:
  - if [ -n "${SANITIZERS}" ]; then export CXXFLAGS="-fsanitize=address -fsanitize=undefined -fno-sanitize=nonnull-attribute"; fi
  - if [ -n "${SANITIZERS}" ]; then export LDFLAGS="-fsanitize=address -fsanitize=undefined"; fi
  - if [ -n "${COVERAGE}" ]; then export CXXFLAGS="--coverage"; fi
  - if [ -n "${COVERAGE}" ]; then export LDFLAGS="--coverage"; fi
  - mkdir "${HOME}/primal.build" && pushd "${HOME}/primal.build"
  - cmake "${TRAVIS_BUILD_DIR}" -G Ninja -DCMAKE_BUILD_TYPE=${CONFIG} -DCMAKE_INSTALL_PREFIX="${HOME}/primal.install" -DPRIMAL_BENCHMARKS=ON -DPRIMAL_TESTS=ON
  - TERM=dumb cmake --build .
  - ASAN_OPTIONS=allocator_may_return_null=1 ctest --verbose
  - TERM=dumb cmake --build . --target install
  - popd
  - mkdir "${HOME}/primal.import" && pushd "${HOME}/primal.import"
  - cmake "${TRAVIS_BUILD_DIR}/tests/import" -G Ninja -DCMAKE_BUILD_TYPE=${CONFIG} -DCMAKE_PREFIX_PATH="${HOME}/primal.install"
  - TERM=dumb cmake --build .
  - popd

after_success:
  - if [ -z "${COVERAGE}" ] && [ -z "${SANITIZERS}" ]; then ${HOME}/primal.build/benchmarks/primal_benchmarks; fi
  - if [ -z "${COVERAGE}" ] && [ -z "${SANITIZERS}" ]; then codecov --gcov-root "${HOME}/primal.build" --gcov-exec gcov-${GCC} --gcov-args "-s `pwd`"; fi

notifications:
  email: false
